name: portfolio-website-actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PORTFOLIO_BUCKT_NAME: rana.lol

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup nodejs ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build

    - name: Deploy to S3 using CloudFormation
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PORTFOLIO_WEBSITE }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PORTFOLIO_WEBSITE }}
        aws-region: ${{ secrets.AWS_REGION_PORTFOLIO_WEBSITE }}

    - name: Check if stack exists
      id: check-stack
      run: aws cloudformation describe-stacks --stack-name portfolio-website-stack || echo "StackNotFound"

    - name: Update or create stack
      run: |
        # Check if the stack was found
        if [ "${{ steps.check-stack.run.result }}" != "StackNotFound" ]; then
          # Update the CloudFormation stack
          aws cloudformation update-stack --stack-name portfolio-website-stack --template-body file://cf-template.yml
        else
          # Create the CloudFormation stack if it doesn't exist
          # Example command:
          aws cloudformation create-stack --stack-name portfolio-website-stack --template-body file://cf-template.yml
        fi

    - name: Sync build to S3 bucket
      run: aws s3 sync build/ s3://${{ env.PORTFOLIO_BUCKT_NAME }} --delete
